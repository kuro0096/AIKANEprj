レイトレーシングとは？
英語でRay Tracingと言ってRay(光線)が物体に当たった時、その座標の色を検出して、ピクセルを塗りつぶす。
これを全画素について行うことで3Dの絵を表示する。

一般のゲームで用いられている3D表示のアルゴリズムはスキャンライン法といって「三角形塗りつぶしアルゴリズム」で塗りつぶして3D表示してました。
三角形は最終的に2Dですが、3D→2Dの変換行列があって、すべて2Dの三角形に変換され、それをただ塗りつぶしてるだけです。

レイトレーシング(くそ遅い)→スキャンライン(速い)
RTX(レイトレーシングを速くするためのハードウェア)
ついでに言うと、機械学習も速くなります(テンソルコア)

射影長 = |A|cosθ
A・B = |A||B|cosθ
内積 cosθ
(dot)
A・B/|B| = |A|cosθ
Bが正規化済みなら
A・B = |A|cosθ

ランバートの余弦則

明るさ(輝度) = kcosθ
N・L = |N||L|cosθ
cosθ = N(法線)・L(光に向かうベクトル)/|N||L|
N,Lが正規化済みなら
cosθ = N・L

N = (l-C).normalize()

交点までの距離(distance)を求める手順
すでに垂線はわかっている
半径もわかっている
１あとは三平方の定理を使って射影点から交点までの距離を測る
２射影長から1の長さを引く

ディフューズ(拡散反射)の計算
基本的には「ランバートの余弦則」が使用される。
そもそも何のcosθなのか
明るさ = cosθ
A・B = |A||B|cosθ
明るさ = cosθ = A・B/|A||B|;
もしAとBが正規化済みなら
cosθ = A・B
本来は反射輝度 = kcosθ